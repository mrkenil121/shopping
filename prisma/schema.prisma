generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  role      String   @default("customer") // 'admin' or 'customer'
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]  // One-to-many relationship with orders
  cart      Cart?    // One-to-one relationship with cart (optional)
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  wsCode      Int      @unique
  salesPrice  Float
  mrp         Float
  packageSize Int
  tags        String[]
  category    String
  images      String[] // This will store Cloudinary image URLs
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  orderItems  OrderItem[] // One-to-many relationship with order items
  cartItems   CartItem[]  // One-to-many relationship with cart items
}

model Order {
  id          Int      @id @default(autoincrement())
  userId      Int
  totalAmount Float
  status      String   @default("pending") // 'pending', 'confirmed'
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id]) // Link to the User model
  orderItems  OrderItem[] // One-to-many relationship with order items
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  orderId   Int
  order     Order   @relation(fields: [orderId], references: [id]) // Link to Order model
  productId Int
  product   Product @relation(fields: [productId], references: [id]) // Link to Product model
  quantity  Int
  price     Float

  @@unique([orderId, productId]) // Ensures no duplicate entries for the same product in one order
}

model Cart {
  id        Int      @id @default(autoincrement())
  userId    Int      @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  cartItems CartItem[] // One-to-many relationship with cart items

  user      User     @relation(fields: [userId], references: [id]) // One-to-one relationship with User
}

model CartItem {
  id        Int     @id @default(autoincrement())
  cartId    Int
  cart      Cart    @relation(fields: [cartId], references: [id]) // Link to Cart model
  productId Int
  product   Product @relation(fields: [productId], references: [id]) // Link to Product model
  quantity  Int
  price     Float

  @@unique([cartId, productId]) // Ensures no duplicate entries for the same product in one cart
}
